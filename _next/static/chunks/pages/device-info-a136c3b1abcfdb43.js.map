{"version":3,"file":"static/chunks/pages/device-info-a136c3b1abcfdb43.js","mappings":"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","sources":["webpack://_N_E/?a61e","webpack://_N_E/./src/components/actions/BugReportPanel.tsx","webpack://_N_E/./src/components/actions/InstallApkPanel.tsx","webpack://_N_E/./src/components/actions/PowerPanel.tsx","webpack://_N_E/./src/pages/device-info.tsx","webpack://_N_E/../../node_modules/.pnpm/@fluentui+react@8.123.4_@types+react-dom@18.3.7_@types+react@18.2.21_react-dom@18.3.1_react@18.3.1/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.base.tsx","webpack://_N_E/../../node_modules/.pnpm/@fluentui+react@8.123.4_@types+react-dom@18.3.7_@types+react@18.2.21_react-dom@18.3.1_react@18.3.1/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.styles.ts","webpack://_N_E/../../node_modules/.pnpm/@fluentui+react@8.123.4_@types+react-dom@18.3.7_@types+react@18.2.21_react-dom@18.3.1_react@18.3.1/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.tsx","webpack://_N_E/../../node_modules/.pnpm/@fluentui+react@8.123.4_@types+react-dom@18.3.7_@types+react@18.2.21_react-dom@18.3.1_react@18.3.1/node_modules/@fluentui/react/lib/components/src/components/MessageBar/MessageBar.types.ts","webpack://_N_E/../../node_modules/.pnpm/@fluentui+utilities@8.15.22_@types+react@18.2.21_react@18.3.1/node_modules/@fluentui/utilities/src/DelayedRender.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/device-info\",\n      function () {\n        return require(\"private-next-pages/device-info.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/device-info\"])\n      });\n    }\n  ","// cspell: ignore bugreport\n// cspell: ignore bugreportz\n\nimport { MessageBar, MessageBarType, PrimaryButton, Stack, StackItem } from \"@fluentui/react\";\nimport { BugReport } from \"@yume-chan/android-bin\";\nimport { action, autorun, makeAutoObservable, observable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { GLOBAL_STATE } from \"../../state/global\";\nimport { saveFile } from \"../../utils\";\n\nclass BugReportState {\n    bugReport: BugReport | undefined = undefined;\n\n    bugReportZInProgress = false;\n\n    bugReportZProgress: string | undefined = undefined;\n\n    bugReportZTotalSize: string | undefined = undefined;\n\n    constructor() {\n        makeAutoObservable(this, {\n            generateBugReport: action.bound,\n            generateBugReportZStream: action.bound,\n            generateBugReportZ: action.bound,\n        });\n\n        autorun(() => {\n            if (GLOBAL_STATE.adb) {\n                (async () => {\n                    const bugreport = await BugReport.queryCapabilities(GLOBAL_STATE.adb!);\n                    runInAction(() => {\n                        this.bugReport = bugreport;\n                    });\n                })();\n            } else {\n                runInAction(() => {\n                    this.bugReport = undefined;\n                });\n            }\n        });\n    }\n\n    async generateBugReport() {\n        await this.bugReport!.bugReport().pipeTo(saveFile(\"bugreport.txt\"));\n    }\n\n    async generateBugReportZStream() {\n        await this.bugReport!.bugReportZStream().pipeTo(saveFile(\"bugreport.zip\"));\n    }\n\n    async generateBugReportZ() {\n        runInAction(() => {\n            this.bugReportZInProgress = true;\n        });\n\n        const filename = await this.bugReport!.bugReportZ({\n            onProgress: this.bugReport!.supportsBugReportZProgress\n                ? action((progress, total) => {\n                      this.bugReportZProgress = progress;\n                      this.bugReportZTotalSize = total;\n                  })\n                : undefined,\n        });\n\n        const sync = await GLOBAL_STATE.adb!.sync();\n        await sync.read(filename).pipeTo(saveFile(\"bugreport.zip\"));\n\n        sync.dispose();\n\n        runInAction(() => {\n            this.bugReportZInProgress = false;\n            this.bugReportZProgress = undefined;\n            this.bugReportZTotalSize = undefined;\n        });\n    }\n}\n\nconst state = new BugReportState();\n\nconst BugReportPanel = observer(function BugReportPanel() {\n    return (\n        <Stack tokens={{ childrenGap: 8 }}>\n            <MessageBar messageBarType={MessageBarType.info} delayedRender={false}>\n                This is the <code>bugreport</code>/<code>bugreportz</code> tool in Android\n            </MessageBar>\n\n            <Stack horizontal wrap verticalAlign=\"center\" tokens={{ childrenGap: 8 }}>\n                <PrimaryButton disabled={!state.bugReport} text=\"Generate BugReport\" onClick={state.generateBugReport} />\n                <PrimaryButton\n                    disabled={!state.bugReport?.supportsBugReportZStream}\n                    text=\"Generate Zipped BugReport (Streaming)\"\n                    onClick={state.generateBugReportZStream}\n                />\n                <PrimaryButton\n                    disabled={!state.bugReport?.supportsBugReportZ || state.bugReportZInProgress}\n                    text=\"Generate Zipped BugReport\"\n                    onClick={state.generateBugReportZ}\n                />\n                {state.bugReportZInProgress && (\n                    <StackItem>\n                        {state.bugReportZTotalSize ? (\n                            <span>\n                                Progress: {state.bugReportZProgress} / {state.bugReportZTotalSize}\n                            </span>\n                        ) : (\n                            <span>\n                                Generating... Please wait\n                                {!state.bugReport!.supportsBugReportZProgress && \" (this device does not support progress)\"}\n                            </span>\n                        )}\n                    </StackItem>\n                )}\n            </Stack>\n        </Stack>\n    );\n});\n\nexport default BugReportPanel;\n","import { Checkbox, PrimaryButton, ProgressIndicator, Stack } from \"@fluentui/react\";\nimport { PackageManager, PackageManagerInstallOptions } from \"@yume-chan/android-bin\";\nimport { WrapConsumableStream, WritableStream } from \"@yume-chan/stream-extra\";\nimport { action, makeAutoObservable, observable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { GLOBAL_STATE } from \"../../state/global\";\nimport { ProgressStream, createFileStream, pickFile } from \"../../utils\";\n\nenum Stage {\n    Uploading,\n    Installing,\n    Completed,\n}\n\ninterface Progress {\n    filename: string;\n    stage: Stage;\n    uploadedSize: number;\n    totalSize: number;\n    value: number | undefined;\n}\n\nclass InstallPageState {\n    installing = false;\n    progress: Progress | undefined = undefined;\n    log: string = \"\";\n    options: Partial<PackageManagerInstallOptions> = {\n        bypassLowTargetSdkBlock: false,\n    };\n\n    constructor() {\n        makeAutoObservable(this, {\n            progress: observable.ref,\n            install: false,\n            options: observable.deep,\n        });\n    }\n\n    install = async () => {\n        const file = await pickFile({ accept: \".apk\" });\n        if (!file) {\n            return;\n        }\n\n        runInAction(() => {\n            this.installing = true;\n            this.progress = {\n                filename: file.name,\n                stage: Stage.Uploading,\n                uploadedSize: 0,\n                totalSize: file.size,\n                value: 0,\n            };\n            this.log = \"\";\n        });\n\n        const pm = new PackageManager(GLOBAL_STATE.adb!);\n        const start = Date.now();\n        const log = await pm.installStream(\n            file.size,\n            createFileStream(file)\n                .pipeThrough(new WrapConsumableStream())\n                .pipeThrough(\n                    new ProgressStream(\n                        action((uploaded) => {\n                            if (uploaded !== file.size) {\n                                this.progress = {\n                                    filename: file.name,\n                                    stage: Stage.Uploading,\n                                    uploadedSize: uploaded,\n                                    totalSize: file.size,\n                                    value: (uploaded / file.size) * 0.8,\n                                };\n                            } else {\n                                this.progress = {\n                                    filename: file.name,\n                                    stage: Stage.Installing,\n                                    uploadedSize: uploaded,\n                                    totalSize: file.size,\n                                    value: 0.8,\n                                };\n                            }\n                        })\n                    )\n                )\n        );\n\n        const elapsed = Date.now() - start;\n        await log.pipeTo(\n            new WritableStream({\n                write: action((chunk) => {\n                    this.log += chunk;\n                }),\n            })\n        );\n\n        const transferRate = (file.size / (elapsed / 1000) / 1024 / 1024).toFixed(2);\n        this.log += `Install finished in ${elapsed}ms at ${transferRate}MB/s`;\n\n        runInAction(() => {\n            this.progress = {\n                filename: file.name,\n                stage: Stage.Completed,\n                uploadedSize: file.size,\n                totalSize: file.size,\n                value: 1,\n            };\n            this.installing = false;\n        });\n    };\n}\n\nconst state = new InstallPageState();\n\nconst InstallApkPanel = observer(function InstallApkPanel() {\n    return (\n        <Stack tokens={{ childrenGap: 8 }}>\n            <Stack horizontal>\n                <Checkbox\n                    label=\"--bypass-low-target-sdk-block (Android 14)\"\n                    checked={state.options.bypassLowTargetSdkBlock}\n                    onChange={(_, checked) => {\n                        if (checked === undefined) {\n                            return;\n                        }\n                        runInAction(() => {\n                            state.options.bypassLowTargetSdkBlock = checked;\n                        });\n                    }}\n                />\n            </Stack>\n\n            <Stack horizontal>\n                <PrimaryButton disabled={!GLOBAL_STATE.adb || state.installing} text=\"Browse APK\" onClick={state.install} />\n            </Stack>\n\n            {state.progress && (\n                <ProgressIndicator\n                    styles={{ root: { width: 300 } }}\n                    label={state.progress.filename}\n                    percentComplete={state.progress.value}\n                    description={Stage[state.progress.stage]}\n                />\n            )}\n\n            {state.log && <pre>{state.log}</pre>}\n        </Stack>\n    );\n});\n\nexport default InstallApkPanel;\n","import { DefaultButton, Icon, MessageBar, MessageBarType, Stack, TooltipHost } from \"@fluentui/react\";\nimport { observer } from \"mobx-react-lite\";\nimport { GLOBAL_STATE } from \"../../state/global\";\nimport { Icons } from \"../../utils\";\n\nconst PowerPanel = observer(function PowerPanel() {\n    return (\n        <Stack tokens={{ childrenGap: 8 }}>\n            <Stack horizontal wrap tokens={{ childrenGap: 8 }}>\n                <DefaultButton text=\"Reboot\" disabled={!GLOBAL_STATE.adb} onClick={() => GLOBAL_STATE.adb!.power.reboot()} />\n                <DefaultButton text=\"Power Off\" disabled={!GLOBAL_STATE.adb} onClick={() => GLOBAL_STATE.adb!.power.powerOff()} />\n                <DefaultButton text=\"Press Power Button\" disabled={!GLOBAL_STATE.adb} onClick={() => GLOBAL_STATE.adb!.power.powerButton()} />\n            </Stack>\n\n            <MessageBar messageBarType={MessageBarType.severeWarning} delayedRender={false}>\n                Danger Zone Below\n            </MessageBar>\n\n            <Stack horizontal wrap tokens={{ childrenGap: 8 }}>\n                <DefaultButton text=\"Bootloader\" disabled={!GLOBAL_STATE.adb} onClick={() => GLOBAL_STATE.adb!.power.bootloader()} />\n                <DefaultButton text=\"Fastboot\" disabled={!GLOBAL_STATE.adb} onClick={() => GLOBAL_STATE.adb!.power.fastboot()} />\n                <DefaultButton text=\"Recovery\" disabled={!GLOBAL_STATE.adb} onClick={() => GLOBAL_STATE.adb!.power.recovery()} />\n                <DefaultButton text=\"Sideload\" disabled={!GLOBAL_STATE.adb} onClick={() => GLOBAL_STATE.adb!.power.sideload()} />\n            </Stack>\n\n            <Stack tokens={{ childrenGap: 8 }}>\n                <Stack horizontal tokens={{ childrenGap: 8 }}>\n                    <DefaultButton text=\"Qualcomm EDL\" disabled={!GLOBAL_STATE.adb} onClick={() => GLOBAL_STATE.adb!.power.qualcommEdlMode()} />\n                    <TooltipHost content={<span>Only works on some Qualcomm devices.</span>}>\n                        <Icon style={{ verticalAlign: \"middle\", marginLeft: 4, fontSize: 18 }} iconName={Icons.Info} />\n                    </TooltipHost>\n                </Stack>\n                <Stack horizontal tokens={{ childrenGap: 8 }}>\n                    <DefaultButton text=\"Samsung Odin\" disabled={!GLOBAL_STATE.adb} onClick={() => GLOBAL_STATE.adb!.power.samsungOdin()} />\n                    <TooltipHost content={<span>Only works on Samsung devices.</span>}>\n                        <Icon style={{ verticalAlign: \"middle\", marginLeft: 4, fontSize: 18 }} iconName={Icons.Info} />\n                    </TooltipHost>\n                </Stack>\n            </Stack>\n        </Stack>\n    );\n});\n\nexport default PowerPanel;\n","import {\n    Icon,\n    MessageBar,\n    Separator,\n    Stack,\n    TooltipHost,\n} from \"@fluentui/react\";\nimport { AdbFeature } from \"@yume-chan/adb\";\nimport { observer } from \"mobx-react-lite\";\nimport type { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { GLOBAL_STATE } from \"../state\";\nimport { Icons, RouteStackProps } from \"../utils\";\nimport BugReportPanel from \"../components/actions/BugReportPanel\";\nimport InstallApkPanel from \"../components/actions/InstallApkPanel\";\nimport PowerPanel from \"../components/actions/PowerPanel\";\n\nconst KNOWN_FEATURES: Record<string, string> = {\n    [AdbFeature.ShellV2]: `\"shell\" command now supports separating child process's stdout and stderr, and returning exit code`,\n    // 'cmd': '',\n    [AdbFeature.StatV2]:\n        '\"sync\" command now supports \"STA2\" (returns more information of a file than old \"STAT\") and \"LST2\" (returns information of a directory) sub command',\n    [AdbFeature.ListV2]:\n        '\"sync\" command now supports \"LST2\" sub command which returns more information when listing a directory than old \"LIST\"',\n    [AdbFeature.FixedPushMkdir]:\n        \"Android 9 (P) introduced a bug that pushing files to a non-existing directory would fail. This feature indicates it's fixed (Android 10)\",\n    // 'apex': '',\n    // 'abb': '',\n    // 'fixed_push_symlink_timestamp': '',\n    [AdbFeature.AbbExec]:\n        'Supports \"abb_exec\" variant that can be used to install App faster',\n    // 'remount_shell': '',\n    // 'track_app': '',\n    // 'sendrecv_v2': '',\n    sendrecv_v2_brotli:\n        'Supports \"brotli\" compression algorithm when pushing/pulling files',\n    sendrecv_v2_lz4:\n        'Supports \"lz4\" compression algorithm when pushing/pulling files',\n    sendrecv_v2_zstd:\n        'Supports \"zstd\" compression algorithm when pushing/pulling files',\n    // 'sendrecv_v2_dry_run_send': '',\n};\n\nconst DeviceInfo: NextPage = () => {\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Device Info - Tango</title>\n            </Head>\n\n            <span>Product Name (<code>ro.product.name</code>): {GLOBAL_STATE.adb?.banner.product}</span>\n\n            <span>Model Name (<code>ro.product.model</code>): {GLOBAL_STATE.adb?.banner.model}</span>\n\n            <span>Device Name (<code>ro.product.device</code>): {GLOBAL_STATE.adb?.banner.device}</span>\n\n            <MessageBar delayedRender={false}>\n                <span>\n                    Feature list decides how each individual commands should\n                    behavior.\n                </span>\n                <br />\n\n                <span>\n                    For example, it may indicate the availability of a new\n                    command,{\" \"}\n                </span>\n                <span>{`or a workaround for an old bug is not required because it's already been fixed.`}</span>\n                <br />\n            </MessageBar>\n            <span>\n                <span>Features: </span>\n                {GLOBAL_STATE.adb?.banner.features.map((feature, index) => (\n                    <span key={feature}>\n                        {index !== 0 && <span>, </span>}\n                        <span>{feature}</span>\n                        {KNOWN_FEATURES[feature] && (\n                            <TooltipHost\n                                content={<span>{KNOWN_FEATURES[feature]}</span>}\n                            >\n                                <Icon\n                                    style={{ marginLeft: 4 }}\n                                    iconName={Icons.Info}\n                                />\n                            </TooltipHost>\n                        )}\n                    </span>\n                ))}\n            </span>\n\n            <Separator />\n            <BugReportPanel />\n            <Separator />\n            <InstallApkPanel />\n            <Separator />\n            <PowerPanel />\n        </Stack>\n    );\n};\n\nexport default observer(DeviceInfo);\n","import * as React from 'react';\nimport { DelayedRender, classNamesFunction, getNativeProps, htmlElementProperties, css } from '../../Utilities';\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\nimport { MessageBarType } from './MessageBar.types';\nimport { useId, useBoolean } from '@fluentui/react-hooks';\nimport type { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nconst ICON_MAP = {\n  [MessageBarType.info]: 'Info',\n  [MessageBarType.warning]: 'Info',\n  [MessageBarType.error]: 'ErrorBadge',\n  [MessageBarType.blocked]: 'Blocked2',\n  [MessageBarType.severeWarning]: 'Warning',\n  [MessageBarType.success]: 'Completed',\n};\n\nconst COMPONENT_NAME = 'MessageBar';\n\nconst getClassNames = classNamesFunction<IMessageBarStyleProps, IMessageBarStyles>();\n\nconst getAnnouncementPriority = (messageBarType: MessageBarType): 'assertive' | 'polite' => {\n  switch (messageBarType) {\n    case MessageBarType.blocked:\n    case MessageBarType.error:\n    case MessageBarType.severeWarning:\n      return 'assertive';\n  }\n  return 'polite';\n};\n\nconst getRole = (messageBarType: MessageBarType): 'alert' | 'status' => {\n  switch (messageBarType) {\n    case MessageBarType.blocked:\n    case MessageBarType.error:\n    case MessageBarType.severeWarning:\n      return 'alert';\n  }\n  return 'status';\n};\n\nexport const MessageBarBase: React.FunctionComponent<IMessageBarProps> = React.forwardRef<\n  HTMLDivElement,\n  IMessageBarProps\n>((props, ref) => {\n  const [expandSingleLine, { toggle: toggleExpandSingleLine }] = useBoolean(false);\n  const labelId = useId('MessageBar');\n\n  const {\n    actions,\n    className,\n    children,\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    overflowButtonAriaLabel,\n    dismissIconProps,\n    styles,\n    theme,\n    messageBarType = MessageBarType.info,\n    onDismiss = undefined,\n    isMultiline = true,\n    truncated,\n    dismissButtonAriaLabel,\n    messageBarIconProps,\n    role,\n    delayedRender = true,\n    expandButtonProps,\n    onExpandButtonToggled = undefined,\n    showExpandButton,\n  } = props;\n\n  // Wrap 'toggleExpandSingleLine' to execute the 'onExpandButtonToggled' callback whenever the expand button toggles\n  const handleToggleExpandSingleLine = React.useCallback(() => {\n    toggleExpandSingleLine();\n    if (onExpandButtonToggled) {\n      // We use the opposite of 'expandSingleLine' here because at this point the useBoolean's\n      // useState hasn't been updated yet.\n      onExpandButtonToggled(!expandSingleLine);\n    }\n  }, [expandSingleLine, onExpandButtonToggled, toggleExpandSingleLine]);\n\n  const nativeProps = getNativeProps<React.HTMLAttributes<HTMLSpanElement>>(props, htmlElementProperties, [\n    'className',\n    'role',\n  ]);\n\n  const classNames: { [key in keyof IMessageBarStyles]: string } = getClassNames(styles, {\n    theme: theme!,\n    messageBarType: messageBarType || MessageBarType.info,\n    onDismiss: onDismiss !== undefined,\n    actions: actions !== undefined,\n    truncated,\n    isMultiline,\n    expandSingleLine,\n    className,\n  });\n\n  const expandIconProps = { iconName: expandSingleLine ? 'DoubleChevronUp' : 'DoubleChevronDown' };\n  const regionProps = actions || onDismiss ? { 'aria-describedby': labelId, role: 'region' } : {};\n  const actionsDiv = actions ? <div className={classNames.actions}>{actions}</div> : null;\n\n  const dismissButton = onDismiss ? (\n    <IconButton\n      disabled={false}\n      className={classNames.dismissal}\n      onClick={onDismiss}\n      iconProps={dismissIconProps ? dismissIconProps : { iconName: 'Clear' }}\n      title={dismissButtonAriaLabel}\n      ariaLabel={dismissButtonAriaLabel}\n    />\n  ) : null;\n\n  return (\n    <div ref={ref} className={classNames.root} {...regionProps}>\n      <div className={classNames.content}>\n        <div className={classNames.iconContainer} aria-hidden>\n          {messageBarIconProps ? (\n            <Icon {...messageBarIconProps} className={css(classNames.icon, messageBarIconProps.className)} />\n          ) : (\n            <Icon iconName={ICON_MAP[messageBarType!]} className={classNames.icon} />\n          )}\n        </div>\n        <div\n          className={classNames.text}\n          id={labelId}\n          role={role || getRole(messageBarType)}\n          aria-live={getAnnouncementPriority(messageBarType)}\n        >\n          <span className={classNames.innerText} {...nativeProps}>\n            {delayedRender ? (\n              <DelayedRender>\n                <span>{children}</span>\n              </DelayedRender>\n            ) : (\n              // this span is probably not necessary, but preserving it for now in case anyone\n              // has styling that expects it to be present\n              <span>{children}</span>\n            )}\n          </span>\n        </div>\n        {\n          /* singleline expand/collapse button */ (showExpandButton || (!isMultiline && !actionsDiv && truncated)) && (\n            <div className={classNames.expandSingleLine}>\n              <IconButton\n                disabled={false}\n                className={classNames.expand}\n                onClick={handleToggleExpandSingleLine}\n                iconProps={expandIconProps}\n                ariaLabel={overflowButtonAriaLabel}\n                aria-expanded={expandSingleLine}\n                {...expandButtonProps}\n              />\n            </div>\n          )\n        }\n        {/* singleline actions */ !isMultiline && actionsDiv}\n        {\n          /* singleline dismiss */ !isMultiline && dismissButton && (\n            <div className={classNames.dismissSingleLine}>{dismissButton}</div>\n          )\n        }\n        {/* multiline dismiss */ isMultiline && dismissButton}\n      </div>\n      {/* multiline actions */ isMultiline && actionsDiv}\n    </div>\n  );\n});\nMessageBarBase.displayName = COMPONENT_NAME;\n","import {\n  HighContrastSelector,\n  HighContrastSelectorWhite,\n  ScreenWidthMaxSmall,\n  getScreenSelector,\n  getGlobalClassNames,\n  getFocusStyle,\n  IconFontSizes,\n  getHighContrastNoAdjustStyle,\n} from '../../Styling';\nimport { MessageBarType } from './MessageBar.types';\nimport type { IStyle, ISemanticColors } from '../../Styling';\nimport type { IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nconst GlobalClassNames = {\n  root: 'ms-MessageBar',\n  error: 'ms-MessageBar--error',\n  blocked: 'ms-MessageBar--blocked',\n  severeWarning: 'ms-MessageBar--severeWarning',\n  success: 'ms-MessageBar--success',\n  warning: 'ms-MessageBar--warning',\n  multiline: 'ms-MessageBar-multiline',\n  singleline: 'ms-MessageBar-singleline',\n  dismissalSingleLine: 'ms-MessageBar-dismissalSingleLine',\n  expandingSingleLine: 'ms-MessageBar-expandingSingleLine',\n  content: 'ms-MessageBar-content',\n  iconContainer: 'ms-MessageBar-icon',\n  text: 'ms-MessageBar-text',\n  innerText: 'ms-MessageBar-innerText',\n  dismissSingleLine: 'ms-MessageBar-dismissSingleLine',\n  expandSingleLine: 'ms-MessageBar-expandSingleLine',\n  dismissal: 'ms-MessageBar-dismissal',\n  expand: 'ms-MessageBar-expand',\n  actions: 'ms-MessageBar-actions',\n  actionsSingleline: 'ms-MessageBar-actionsSingleLine',\n};\n\nconst backgroundColor: { [key: string]: keyof ISemanticColors } = {\n  [MessageBarType.error]: 'errorBackground',\n  [MessageBarType.blocked]: 'errorBackground',\n  [MessageBarType.success]: 'successBackground',\n  [MessageBarType.warning]: 'warningBackground',\n  [MessageBarType.severeWarning]: 'severeWarningBackground',\n  [MessageBarType.info]: 'infoBackground',\n};\n\nconst iconColor: { [key: string]: keyof ISemanticColors } = {\n  [MessageBarType.error]: 'errorIcon',\n  [MessageBarType.blocked]: 'errorIcon',\n  [MessageBarType.success]: 'successIcon',\n  [MessageBarType.warning]: 'warningIcon',\n  [MessageBarType.severeWarning]: 'severeWarningIcon',\n  [MessageBarType.info]: 'infoIcon',\n};\n\nconst highContrastBorderColor: { [key: string]: string } = {\n  [MessageBarType.error]: '#ff0000',\n  [MessageBarType.blocked]: '#ff0000',\n  [MessageBarType.success]: '#bad80a',\n  [MessageBarType.warning]: '#fff100',\n  [MessageBarType.severeWarning]: '#ff0000',\n  [MessageBarType.info]: 'WindowText',\n};\n\nconst highContrastWhiteBorderColor: { [key: string]: string } = {\n  [MessageBarType.error]: '#e81123',\n  [MessageBarType.blocked]: '#e81123',\n  [MessageBarType.success]: '#107c10',\n  [MessageBarType.warning]: '#966400',\n  [MessageBarType.severeWarning]: '#d83b01',\n  [MessageBarType.info]: 'WindowText',\n};\n\nexport const getStyles = (props: IMessageBarStyleProps): IMessageBarStyles => {\n  const {\n    theme,\n    className,\n    onDismiss,\n    truncated,\n    isMultiline,\n    expandSingleLine,\n    messageBarType = MessageBarType.info,\n  } = props;\n  const { semanticColors, fonts } = theme;\n\n  const SmallScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const dismissalAndExpandIconStyle: IStyle = {\n    fontSize: IconFontSizes.xSmall,\n    height: 10,\n    lineHeight: '10px',\n    color: semanticColors.messageText,\n    selectors: {\n      [HighContrastSelector]: {\n        ...getHighContrastNoAdjustStyle(),\n        color: 'WindowText',\n      },\n    },\n  };\n\n  const dismissalAndExpandStyle: IStyle = [\n    getFocusStyle(theme, {\n      inset: 1,\n      highContrastStyle: {\n        outlineOffset: '-6px',\n        outline: '1px solid Highlight',\n      },\n      borderColor: 'transparent',\n    }),\n    {\n      flexShrink: 0,\n      width: 32,\n      height: 32,\n      padding: '8px 12px',\n      selectors: {\n        '& .ms-Button-icon': dismissalAndExpandIconStyle,\n        ':hover': {\n          backgroundColor: 'transparent',\n        },\n        ':active': {\n          backgroundColor: 'transparent',\n        },\n      },\n    },\n  ];\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      messageBarType === MessageBarType.error && classNames.error,\n      messageBarType === MessageBarType.blocked && classNames.blocked,\n      messageBarType === MessageBarType.severeWarning && classNames.severeWarning,\n      messageBarType === MessageBarType.success && classNames.success,\n      messageBarType === MessageBarType.warning && classNames.warning,\n      isMultiline ? classNames.multiline : classNames.singleline,\n      !isMultiline && onDismiss && classNames.dismissalSingleLine,\n      !isMultiline && truncated && classNames.expandingSingleLine,\n      {\n        background: semanticColors[backgroundColor[messageBarType]],\n        boxSizing: 'border-box',\n        color: semanticColors.messageText,\n        minHeight: 32,\n        width: '100%',\n        display: 'flex',\n        wordBreak: 'break-word',\n        selectors: {\n          '.ms-Link': {\n            color: semanticColors.messageLink,\n            selectors: {\n              ':hover': {\n                color: semanticColors.messageLinkHovered,\n              },\n            },\n          },\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n            background: 'transparent',\n            border: `1px solid ${highContrastBorderColor[messageBarType]}`,\n            color: 'WindowText',\n          },\n          [HighContrastSelectorWhite]: {\n            border: `1px solid ${highContrastWhiteBorderColor[messageBarType]}`,\n          },\n        },\n      },\n      isMultiline && {\n        flexDirection: 'column',\n      },\n      className,\n    ],\n    content: [\n      classNames.content,\n      {\n        display: 'flex',\n        width: '100%',\n        lineHeight: 'normal',\n        [SmallScreenSelector]: {\n          display: 'grid',\n          gridTemplateColumns: 'auto 1fr auto',\n          gridTemplateRows: '1fr auto',\n          gridTemplateAreas: `\n            \"icon text close\"\n            \"action action action\"\n          `,\n        },\n      },\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        fontSize: IconFontSizes.medium,\n        minWidth: 16,\n        minHeight: 16,\n        display: 'flex',\n        flexShrink: 0,\n        margin: '8px 0 8px 12px',\n        [SmallScreenSelector]: {\n          gridArea: 'icon',\n        },\n      },\n    ],\n    icon: {\n      color: semanticColors[iconColor[messageBarType]],\n      selectors: {\n        [HighContrastSelector]: {\n          ...getHighContrastNoAdjustStyle(),\n          color: 'WindowText',\n        },\n      },\n    },\n    text: [\n      classNames.text,\n      {\n        minWidth: 0,\n        display: 'flex',\n        flexGrow: 1,\n        margin: 8,\n        ...fonts.small,\n        [SmallScreenSelector]: {\n          gridArea: 'text',\n        },\n        selectors: {\n          [HighContrastSelector]: {\n            ...getHighContrastNoAdjustStyle(),\n          },\n        },\n      },\n      !onDismiss && {\n        marginRight: 12,\n      },\n    ],\n    innerText: [\n      classNames.innerText,\n      {\n        lineHeight: 16,\n        selectors: {\n          '& span a:last-child': {\n            paddingLeft: 4,\n          },\n        },\n      },\n      truncated && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap',\n      },\n      !isMultiline && {\n        // In high contrast this causes the top and bottom of links' focus outline to be clipped\n        // (not sure of a good way around that while still maintaining text clipping)\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      },\n      !isMultiline &&\n        !truncated && {\n          selectors: {\n            [SmallScreenSelector]: {\n              overflow: 'visible',\n              whiteSpace: 'pre-wrap',\n            },\n          },\n        },\n      expandSingleLine && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap',\n      },\n    ],\n    dismissSingleLine: [\n      classNames.dismissSingleLine,\n      {\n        [SmallScreenSelector]: {\n          gridArea: 'close',\n        },\n      },\n    ],\n    expandSingleLine: classNames.expandSingleLine,\n    dismissal: [classNames.dismissal, dismissalAndExpandStyle],\n    expand: [classNames.expand, dismissalAndExpandStyle],\n    actions: [\n      isMultiline ? classNames.actions : classNames.actionsSingleline,\n      {\n        display: 'flex',\n        flexGrow: 0,\n        flexShrink: 0,\n        flexBasis: 'auto',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        margin: '0 12px 0 8px',\n        // reset forced colors to browser control for inner actions\n        forcedColorAdjust: 'auto',\n        MsHighContrastAdjust: 'auto',\n        [SmallScreenSelector]: {\n          gridArea: 'action',\n          marginRight: 8,\n          marginBottom: 8,\n        },\n        selectors: {\n          '& button:nth-child(n+2)': {\n            marginLeft: 8,\n            [SmallScreenSelector]: {\n              marginBottom: 0,\n            },\n          },\n        },\n      },\n      isMultiline && {\n        marginBottom: 8,\n      },\n      onDismiss &&\n        !isMultiline && {\n          marginRight: 0,\n        },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { MessageBarBase } from './MessageBar.base';\nimport { getStyles } from './MessageBar.styles';\nimport type { IMessageBarProps, IMessageBarStyleProps, IMessageBarStyles } from './MessageBar.types';\n\nexport const MessageBar: React.FunctionComponent<IMessageBarProps> = styled<\n  IMessageBarProps,\n  IMessageBarStyleProps,\n  IMessageBarStyles\n>(MessageBarBase, getStyles, undefined, {\n  scope: 'MessageBar',\n});\n","import * as React from 'react';\nimport { BaseButton, Button, IButtonProps } from '../../Button';\nimport type { ITheme, IStyle } from '../../Styling';\nimport type { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\nimport type { IIconProps } from '../../Icon';\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBar {}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarProps extends React.HTMLAttributes<HTMLElement>, React.RefAttributes<HTMLDivElement> {\n  /**\n   * Optional callback to access the IMessageBar interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IMessageBar>;\n\n  /**\n   * The type of MessageBar to render.\n   * @defaultvalue MessageBarType.info\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * The actions you want to show on the other side.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  actions?: JSX.Element;\n\n  /**\n   * A description of the message bar for the benefit of screen readers.\n   * @deprecated Use native prop `aria-label` instead.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Whether the message bar has a dismiss button and its callback.\n   * If null, we don't show a dismiss button.\n   * @defaultvalue null\n   */\n  // eslint-disable-next-line @typescript-eslint/no-deprecated\n  onDismiss?: (ev?: React.MouseEvent<HTMLElement | BaseButton | Button>) => any;\n\n  /**\n   * Determines if the message bar is multi lined.\n   * If false, and the text overflows over buttons or to another line, it is clipped.\n   * @defaultvalue true\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Aria label on dismiss button if onDismiss is defined.\n   */\n  dismissButtonAriaLabel?: string;\n\n  /**\n   * Determines if the message bar text is truncated.\n   * If true, a button will render to toggle between a single line view and multiline view.\n   * This prop is for single line message bars with no buttons only in a limited space scenario.\n   * @defaultvalue false\n   */\n  truncated?: boolean;\n\n  /**\n   * Aria label on overflow button if truncated is defined.\n   * @deprecated Use `expandButtonProps` instead.\n   */\n  overflowButtonAriaLabel?: string;\n\n  /**\n   * Additional CSS class(es) to apply to the MessageBar.\n   */\n  className?: string;\n\n  /**\n   * Theme (provided through customization.)\n   */\n  theme?: ITheme;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules.\n   */\n  styles?: IStyleFunctionOrObject<IMessageBarStyleProps, IMessageBarStyles>;\n\n  /**\n   * Custom icon prop to replace the dismiss icon.\n   * If unset, default will be the Fabric Clear icon.\n   */\n  dismissIconProps?: IIconProps;\n\n  /**\n   * Custom icon prop to replace the message bar icon.\n   * If unset, default will be the icon set by messageBarType.\n   */\n  messageBarIconProps?: IIconProps;\n\n  /**\n   *  Button props that can be applied to the expand button of the MessageBar.\n   */\n  expandButtonProps?: IButtonProps;\n\n  /**\n   * Callback to execute when expand button is toggled\n   * @returns\n   */\n  onExpandButtonToggled?: (expandSingleLine: boolean) => void;\n\n  /**\n   * Custom role to apply to the MessageBar.\n   * @defaultvalue `alert` if `messageBarType` is `error`, `blocked`, or `severeWarning`;\n   * or `status` otherwise\n   */\n  role?: 'alert' | 'status' | 'none';\n\n  /**\n   * By default, MessageBar delay-renders its content within an internal live region to help ensure\n   * it's announced by screen readers. You can disable that behavior by setting this prop to `false`.\n   *\n   * If you set this prop to `false`, to ensure proper announcement you should either:\n   * - If appropriate, ensure that the `role` prop is set to `alert` (this will be done by default\n   *   if `messageBarType` is `error`, `blocked`, or `severeWarning`), OR\n   * - Set the `role` prop to `none` (to avoid nested `status` regions), wrap the whole MessageBar\n   *   in a `<div role=\"status\">` which is always rendered, and ensure that the MessageBar is\n   *   rendered either conditionally or with a delay.\n   * @default true\n   */\n  delayedRender?: boolean;\n\n  /**\n   * An optional override to show the expand/collapse icon. It will only be shown by default for\n   * single-line truncated MessageBars that do not have actions.\n   * @defaultvalue false\n   */\n  showExpandButton?: boolean;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyleProps {\n  /**\n   * Theme (provided through customization).\n   */\n  theme: ITheme;\n\n  /**\n   * Additional CSS class(es).\n   */\n  className?: string;\n\n  /**\n   * Type of the MessageBar.\n   */\n  messageBarType?: MessageBarType;\n\n  /**\n   * Whether the MessageBar contains a dismiss button.\n   */\n  onDismiss?: boolean;\n\n  /**\n   * Whether the text is truncated.\n   */\n  truncated?: boolean;\n\n  /**\n   * Whether the MessageBar is rendered in multi line (as opposed to single line) mode.\n   */\n  isMultiline?: boolean;\n\n  /**\n   * Whether the single line MessageBar is being expanded.\n   */\n  expandSingleLine?: boolean;\n\n  /**\n   * Whether the MessageBar contains any action elements.\n   */\n  actions?: boolean;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport interface IMessageBarStyles {\n  /**\n   * Style set for the root element.\n   */\n  root?: IStyle;\n\n  /**\n   * Style set for the element containing the icon, text, and optional dismiss button.\n   */\n  content?: IStyle;\n\n  /**\n   * Style set for the element containing the icon.\n   */\n  iconContainer?: IStyle;\n\n  /**\n   * Style set for the icon.\n   */\n  icon?: IStyle;\n\n  /**\n   * Style set for the element containing the text.\n   */\n  text?: IStyle;\n\n  /**\n   * Style set for the text.\n   */\n  innerText?: IStyle;\n\n  /**\n   * Style set for the optional dismiss button.\n   */\n  dismissal?: IStyle;\n\n  /**\n   * Style set for the icon used to expand and collapse the MessageBar.\n   */\n  expand?: IStyle;\n\n  /**\n   * Style set for the element containing the dismiss button.\n   */\n  dismissSingleLine?: IStyle;\n\n  /**\n   * Style set for the element containing the expand icon.\n   */\n  expandSingleLine?: IStyle;\n\n  /**\n   * Style set for the optional element containing the action elements.\n   */\n  actions?: IStyle;\n}\n\n/**\n * {@docCategory MessageBar}\n */\nexport enum MessageBarType {\n  /** Info styled MessageBar */\n  info = 0,\n  /** Error styled MessageBar */\n  error = 1,\n  /** Blocked styled MessageBar */\n  blocked = 2,\n  /** SevereWarning styled MessageBar */\n  severeWarning = 3,\n  /** Success styled MessageBar */\n  success = 4,\n  /** Warning styled MessageBar */\n  warning = 5,\n}\n","import * as React from 'react';\nimport { getWindow } from './dom/getWindow';\nimport { IReactProps } from './React.types';\n\n/**\n * DelayedRender component props.\n *\n * @public\n */\nexport interface IDelayedRenderProps extends IReactProps<{}> {\n  /**\n   * Number of milliseconds to delay rendering children.\n   */\n  delay?: number;\n}\n\n/**\n * DelayedRender component state.\n *\n * @internal\n */\nexport interface IDelayedRenderState {\n  /**\n   * Whether the component is rendered or not.\n   */\n  isRendered: boolean;\n}\n\n/**\n * Utility component for delaying the render of a child component after a given delay. This component\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\n * if necessary.\n *\n * @public\n * {@docCategory DelayedRender}\n */\nexport class DelayedRender extends React.Component<IDelayedRenderProps, IDelayedRenderState> {\n  public static defaultProps = {\n    delay: 0,\n  };\n\n  private _timeoutId: number | undefined;\n\n  constructor(props: IDelayedRenderProps) {\n    super(props);\n    this.state = {\n      isRendered: getWindow() === undefined,\n    };\n  }\n\n  public componentDidMount(): void {\n    let { delay } = this.props;\n    // eslint-disable-next-line no-restricted-globals\n    this._timeoutId = window.setTimeout(() => {\n      this.setState({\n        isRendered: true,\n      });\n    }, delay);\n  }\n\n  public componentWillUnmount(): void {\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId);\n    }\n  }\n\n  public render(): React.ReactElement<{}> | null {\n    return this.state.isRendered ? (React.Children.only(this.props.children) as React.ReactElement<{}>) : null;\n  }\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","Stage","state","generateBugReport","bugReport","pipeTo","saveFile","generateBugReportZStream","bugReportZStream","generateBugReportZ","runInAction","bugReportZInProgress","filename","bugReportZ","onProgress","supportsBugReportZProgress","action","progress","total","bugReportZProgress","bugReportZTotalSize","undefined","sync","GLOBAL_STATE","adb","read","dispose","constructor","makeAutoObservable","bound","autorun","bugreport","BugReport","queryCapabilities","BugReportPanel","observer","jsx_runtime","jsxs","Stack","tokens","childrenGap","MessageBar","messageBarType","MessageBarType","info","delayedRender","jsx","code","horizontal","wrap","verticalAlign","PrimaryButton","disabled","text","onClick","supportsBugReportZStream","supportsBugReportZ","StackItem","span","Uploading","Installing","Completed","installing","log","options","bypassLowTargetSdkBlock","install","file","pickFile","accept","name","stage","uploadedSize","totalSize","size","value","pm","PackageManager","start","Date","now","installStream","createFileStream","pipeThrough","WrapConsumableStream","ProgressStream","uploaded","elapsed","WritableStream","write","chunk","transferRate","toFixed","concat","observable","ref","deep","InstallApkPanel","Checkbox","label","checked","onChange","_","ProgressIndicator","styles","root","width","percentComplete","description","pre","PowerPanel","DefaultButton","power","reboot","powerOff","powerButton","severeWarning","bootloader","fastboot","recovery","sideload","qualcommEdlMode","TooltipHost","content","Icon","style","marginLeft","fontSize","iconName","Icons","Info","samsungOdin","KNOWN_FEATURES","AdbFeature","ShellV2","StatV2","ListV2","FixedPushMkdir","AbbExec","sendrecv_v2_brotli","sendrecv_v2_lz4","sendrecv_v2_zstd","device_info","RouteStackProps","Head","title","banner","product","model","device","br","features","map","feature","index","Separator","ICON_MAP","_a","MessageBar_types","f","warning","error","blocked","success","getClassNames","classNamesFunction","y","getAnnouncementPriority","getRole","MessageBarBase","react","forwardRef","props","useBoolean","k","expandSingleLine","toggleExpandSingleLine","toggle","labelId","useId","M","actions","className","children","overflowButtonAriaLabel","dismissIconProps","theme","_b","_c","onDismiss","_d","isMultiline","truncated","dismissButtonAriaLabel","messageBarIconProps","role","_e","expandButtonProps","_f","onExpandButtonToggled","showExpandButton","handleToggleExpandSingleLine","useCallback","nativeProps","properties","pq","iY","classNames","regionProps","actionsDiv","createElement","dismissButton","IconButton","h","dismissal","iconProps","ariaLabel","tslib_es6","pi","iconContainer","J","css","i","icon","id","innerText","DelayedRender","U","expand","dismissSingleLine","displayName","GlobalClassNames","multiline","singleline","dismissalSingleLine","expandingSingleLine","actionsSingleline","backgroundColor","MessageBar_styles_a","iconColor","highContrastBorderColor","highContrastWhiteBorderColor","styled","z","_m","semanticColors","fonts","SmallScreenSelector","lib","sK","mV","Cn","dismissalAndExpandIconStyle","ld","xSmall","height","lineHeight","color","messageText","selectors","qJ","xM","dismissalAndExpandStyle","GL","inset","highContrastStyle","outlineOffset","outline","borderColor","flexShrink","padding","medium","background","boxSizing","minHeight","display","wordBreak","messageLink","messageLinkHovered","border","bO","flexDirection","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","minWidth","margin","gridArea","flexGrow","small","_g","marginRight","paddingLeft","overflow","whiteSpace","textOverflow","_h","_j","_k","flexBasis","alignItems","forcedColorAdjust","MsHighContrastAdjust","marginBottom","_l","scope","_super","_this","call","isRendered","_dom_getWindow__WEBPACK_IMPORTED_MODULE_2__","tslib__WEBPACK_IMPORTED_MODULE_1__","ZT","prototype","componentDidMount","delay","_timeoutId","setTimeout","setState","componentWillUnmount","clearTimeout","render","react__WEBPACK_IMPORTED_MODULE_0__","Children","only","defaultProps","Component"],"sourceRoot":""}