{"version":3,"file":"static/chunks/pages/tcpip-48ee2f66c388ebab.js","mappings":"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","sources":["webpack://_N_E/?a85f","webpack://_N_E/../../node_modules/.pnpm/@fluentui+react@8.123.4_@types+react-dom@18.3.7_@types+react@18.2.21_react-dom@18.3.1_react@18.3.1/node_modules/@fluentui/react/lib/components/src/components/Text/Text.view.tsx","webpack://_N_E/../../node_modules/.pnpm/@fluentui+react@8.123.4_@types+react-dom@18.3.7_@types+react@18.2.21_react-dom@18.3.1_react@18.3.1/node_modules/@fluentui/react/lib/components/src/components/Text/Text.styles.ts","webpack://_N_E/../../node_modules/.pnpm/@fluentui+react@8.123.4_@types+react-dom@18.3.7_@types+react@18.2.21_react-dom@18.3.1_react@18.3.1/node_modules/@fluentui/react/lib/components/src/components/Text/Text.ts","webpack://_N_E/./src/pages/tcpip.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/tcpip\",\n      function () {\n        return require(\"private-next-pages/tcpip.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/tcpip\"])\n      });\n    }\n  ","/** @jsxRuntime classic */\n/** @jsx withSlots */\nimport { withSlots, getSlots } from '@fluentui/foundation-legacy';\nimport { getNativeProps, htmlElementProperties } from '../../Utilities';\nimport type { ITextComponent, ITextProps, ITextSlots } from './Text.types';\n\nexport const TextView: ITextComponent['view'] = props => {\n  // eslint-disable-next-line eqeqeq\n  if (props.children == null) {\n    return null;\n  }\n\n  const { block, className, as: RootType = 'span', variant, nowrap, ...rest } = props;\n\n  const Slots = getSlots<ITextProps, ITextSlots>(props, {\n    root: RootType,\n  });\n\n  return <Slots.root {...getNativeProps(rest, htmlElementProperties)} />;\n};\n","import type { ITextComponent, ITextStyles, ITextStylesReturnType, ITextProps } from './Text.types';\nimport type { ITheme } from '../../Styling';\n\nexport const TextStyles: ITextComponent['styles'] = (props: ITextProps, theme: ITheme): ITextStylesReturnType => {\n  const { as, className, block, nowrap, variant } = props;\n  const { fonts, semanticColors } = theme;\n  const variantObject = fonts[variant || 'medium'];\n\n  return {\n    root: [\n      variantObject,\n      {\n        color: variantObject.color || semanticColors.bodyText,\n        display: block ? (as === 'td' ? 'table-cell' : 'block') : 'inline',\n        mozOsxFontSmoothing: variantObject.MozOsxFontSmoothing,\n        webkitFontSmoothing: variantObject.WebkitFontSmoothing,\n      },\n      nowrap && {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n      },\n      className,\n    ],\n  } as ITextStyles;\n};\n","import * as React from 'react';\nimport { createComponent } from '@fluentui/foundation-legacy';\nimport { TextView } from './Text.view';\nimport { TextStyles as styles } from './Text.styles';\nimport type { ITextProps } from './Text.types';\n\nexport const Text: React.FunctionComponent<ITextProps> = createComponent(TextView, {\n  displayName: 'Text',\n  styles,\n});\n\nexport default Text;\n","// cspell: ignore addrs\n\nimport {\n    ICommandBarItemProps,\n    MessageBar,\n    Stack,\n    StackItem,\n    Text,\n    TextField,\n    Toggle,\n} from \"@fluentui/react\";\nimport { autorun, makeAutoObservable, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { useCallback, useEffect } from \"react\";\nimport { CommandBar, ExternalLink } from \"../components\";\nimport { GLOBAL_STATE } from \"../state\";\nimport { Icons, RouteStackProps, asyncEffect } from \"../utils\";\n\nclass TcpIpState {\n    initial = true;\n    visible = false;\n    serviceListenAddresses: string[] | undefined = undefined;\n    servicePortEnabled = false;\n    servicePort: string = \"\";\n    persistPortEnabled = false;\n    persistPort: string | undefined = undefined;\n\n    constructor() {\n        makeAutoObservable(this, {\n            initial: false,\n            queryInfo: false,\n            applyServicePort: false,\n        });\n\n        autorun(() => {\n            if (GLOBAL_STATE.adb) {\n                if (this.initial && this.visible) {\n                    this.initial = false;\n                    this.queryInfo();\n                }\n            } else {\n                this.initial = true;\n            }\n        });\n    }\n\n    get commandBarItems(): ICommandBarItemProps[] {\n        return [\n            {\n                key: \"refresh\",\n                disabled: !GLOBAL_STATE.adb,\n                iconProps: { iconName: Icons.ArrowClockwise },\n                text: \"Refresh\",\n                onClick: this.queryInfo as VoidFunction,\n            },\n            {\n                key: \"apply\",\n                disabled: !GLOBAL_STATE.adb,\n                iconProps: { iconName: Icons.Save },\n                text: \"Apply\",\n                onClick: this.applyServicePort,\n            },\n        ];\n    }\n\n    queryInfo = asyncEffect(async (signal) => {\n        if (!GLOBAL_STATE.adb) {\n            runInAction(() => {\n                this.serviceListenAddresses = undefined;\n                this.servicePortEnabled = false;\n                this.servicePort = \"\";\n                this.persistPortEnabled = false;\n                this.persistPort = undefined;\n            });\n            return;\n        }\n\n        const serviceListenAddresses = await GLOBAL_STATE.adb.getProp(\n            \"service.adb.listen_addrs\",\n        );\n        const servicePort = await GLOBAL_STATE.adb.getProp(\n            \"service.adb.tcp.port\",\n        );\n        const persistPort = await GLOBAL_STATE.adb.getProp(\n            \"persist.adb.tcp.port\",\n        );\n\n        if (signal.aborted) {\n            return;\n        }\n\n        runInAction(() => {\n            this.serviceListenAddresses =\n                serviceListenAddresses !== \"\"\n                    ? serviceListenAddresses.split(\",\")\n                    : undefined;\n\n            if (servicePort) {\n                this.servicePortEnabled =\n                    !serviceListenAddresses && servicePort !== \"0\";\n                this.servicePort = servicePort;\n            } else {\n                this.servicePortEnabled = false;\n                this.servicePort = \"5555\";\n            }\n\n            if (persistPort) {\n                this.persistPortEnabled =\n                    !serviceListenAddresses && !servicePort;\n                this.persistPort = persistPort;\n            } else {\n                this.persistPortEnabled = false;\n                this.persistPort = undefined;\n            }\n        });\n    });\n\n    applyServicePort = async () => {\n        if (!GLOBAL_STATE.adb) {\n            return;\n        }\n\n        if (state.servicePortEnabled) {\n            await GLOBAL_STATE.adb.tcpip.setPort(\n                Number.parseInt(state.servicePort, 10),\n            );\n        } else {\n            await GLOBAL_STATE.adb.tcpip.disable();\n        }\n    };\n}\n\nconst state = new TcpIpState();\n\nconst TcpIp: NextPage = () => {\n    useEffect(() => {\n        runInAction(() => {\n            state.visible = true;\n        });\n\n        return () => {\n            runInAction(() => {\n                state.visible = false;\n            });\n        };\n    }, []);\n\n    const handleServicePortEnabledChange = useCallback(\n        (e: unknown, value?: boolean) => {\n            runInAction(() => {\n                state.servicePortEnabled = !!value;\n            });\n        },\n        [],\n    );\n\n    const handleServicePortChange = useCallback(\n        (e: unknown, value?: string) => {\n            if (value === undefined) {\n                return;\n            }\n            runInAction(() => (state.servicePort = value));\n        },\n        [],\n    );\n\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>ADB over WiFi - Tango</title>\n            </Head>\n\n            <CommandBar items={state.commandBarItems} />\n\n            <StackItem>\n                <MessageBar delayedRender={false}>\n                    <Text>\n                        For Tango to wirelessly connect to your device,\n                        <ExternalLink\n                            href=\"https://github.com/yume-chan/ya-webadb/discussions/245#discussioncomment-384030\"\n                            spaceBefore\n                            spaceAfter\n                        >\n                            extra software\n                        </ExternalLink>\n                        is required.\n                    </Text>\n                </MessageBar>\n            </StackItem>\n            <StackItem>\n                <MessageBar delayedRender={false}>\n                    <Text>\n                        Your device will disconnect after changing ADB over WiFi\n                        config.\n                    </Text>\n                </MessageBar>\n            </StackItem>\n\n            <StackItem>\n                <Toggle\n                    inlineLabel\n                    label=\"service.adb.listen_addrs\"\n                    disabled\n                    checked={!!state.serviceListenAddresses}\n                    onText=\"Enabled\"\n                    offText=\"Disabled\"\n                />\n                {state.serviceListenAddresses?.map((address) => (\n                    <TextField\n                        key={address}\n                        disabled\n                        value={address}\n                        styles={{ root: { width: 300 } }}\n                    />\n                ))}\n            </StackItem>\n\n            <StackItem>\n                <Toggle\n                    inlineLabel\n                    label=\"service.adb.tcp.port\"\n                    checked={state.servicePortEnabled}\n                    disabled={\n                        !GLOBAL_STATE.adb || !!state.serviceListenAddresses\n                    }\n                    onText=\"Enabled\"\n                    offText=\"Disabled\"\n                    onChange={handleServicePortEnabledChange}\n                />\n                <TextField\n                    disabled={\n                        !GLOBAL_STATE.adb || !!state.serviceListenAddresses\n                    }\n                    value={state.servicePort}\n                    styles={{ root: { width: 300 } }}\n                    onChange={handleServicePortChange}\n                />\n            </StackItem>\n\n            <StackItem>\n                <Toggle\n                    inlineLabel\n                    label=\"persist.adb.tcp.port\"\n                    disabled\n                    checked={state.persistPortEnabled}\n                    onText=\"Enabled\"\n                    offText=\"Disabled\"\n                />\n                {state.persistPort && (\n                    <TextField\n                        disabled\n                        value={state.persistPort}\n                        styles={{ root: { width: 300 } }}\n                    />\n                )}\n            </StackItem>\n        </Stack>\n    );\n};\n\nexport default observer(TcpIp);\n"],"names":["window","__NEXT_P","push","__webpack_require__","Text","createComponent","L","props","children","block","className","_a","as","rest","variant","nowrap","tslib_es6","_T","Slots","slots","FJ","root","Yb","pi","properties","pq","iY","displayName","styles","theme","semanticColors","variantObject","fonts","color","bodyText","display","mozOsxFontSmoothing","MozOsxFontSmoothing","webkitFontSmoothing","WebkitFontSmoothing","whiteSpace","overflow","textOverflow","state","commandBarItems","key","disabled","GLOBAL_STATE","adb","iconProps","iconName","Icons","ArrowClockwise","text","onClick","queryInfo","Save","applyServicePort","constructor","initial","visible","serviceListenAddresses","undefined","servicePortEnabled","servicePort","persistPortEnabled","persistPort","asyncEffect","signal","runInAction","getProp","aborted","split","tcpip","setPort","Number","parseInt","disable","makeAutoObservable","autorun","observer","useEffect","handleServicePortEnabledChange","useCallback","e","value","handleServicePortChange","jsx_runtime","jsxs","Stack","RouteStackProps","jsx","Head","title","CommandBar","items","StackItem","MessageBar","delayedRender","ExternalLink","href","spaceBefore","spaceAfter","Toggle","inlineLabel","label","checked","onText","offText","map","TextField","address","width","onChange"],"sourceRoot":""}